public class Solution {
    public string Convert(string s, int numRows) {
        // Edge case: If numRows is 1, there's no zigzagging, just return the string.
        if (numRows == 1) {
            return s;
        }

        // Create an array to hold strings for each row
        var rows = new string[numRows];
        int currentRow = 0;
        bool goingDown = false;

        // Traverse through the string and fill the rows
        foreach (char c in s) {
            rows[currentRow] += c;

            // If we are at the top or bottom row, we need to change direction
            if (currentRow == 0 || currentRow == numRows - 1) {
                goingDown = !goingDown;
            }

            // Move up or down to the next row
            currentRow += goingDown ? 1 : -1;
        }

        // Combine all rows to get the final result
        string result = "";
        foreach (var row in rows) {
            result += row;
        }

        return result;
    }
}
